{"version":3,"sources":["webpack:///./src/app/components/user/adduser/adduser.component.css","webpack:///./src/app/components/user/adduser/adduser.component.html","webpack:///./src/app/components/user/adduser/adduser.component.ts","webpack:///./src/app/components/user/home/home.component.css","webpack:///./src/app/components/user/home/home.component.html","webpack:///./src/app/components/user/home/home.component.ts","webpack:///./src/app/components/user/listuser/listuser.component.css","webpack:///./src/app/components/user/listuser/listuser.component.html","webpack:///./src/app/components/user/listuser/listuser.component.ts","webpack:///./src/app/components/user/loginuser/loginuser.component.css","webpack:///./src/app/components/user/loginuser/loginuser.component.html","webpack:///./src/app/components/user/loginuser/loginuser.component.ts","webpack:///./src/app/components/user/user-routing.module.ts","webpack:///./src/app/components/user/user.module.ts"],"names":[],"mappings":"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","file":"components-user-user-module.js","sourcesContent":["module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci9hZGR1c2VyL2FkZHVzZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-3\\\">\\n      {{mode}} user<br>\\n      <a routerLink=\\\"/user\\\">List Users</a>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <form [formGroup]=\\\"createUser\\\" name=\\\"createUser\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n        <mat-form-field class=\\\"field-full-width\\\">\\n          <input matInput id=\\\"name\\\" placeholder=\\\"name\\\" formControlName=\\\"name\\\"\\n            [ngClass]=\\\"{'is-invalid': submitted && c.name.errors}\\\" required #name>\\n          <div *ngIf=\\\"submitted && c.name.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"c.name.errors.required\\\">Name is required</div>\\n          </div>\\n        </mat-form-field>\\n\\n        <br>\\n\\n        <mat-form-field class=\\\"field-full-width\\\">\\n          <input matInput placeholder=\\\"email\\\" formControlName=\\\"email\\\"\\n            [ngClass]=\\\"{'is-invalid': submitted && c.email.errors}\\\" pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\" required #email>\\n            <div *ngIf=\\\"email.errors &&(email.touched || email.dirty)\\\" class =\\\"aler alert-danger\\\">\\n              <div [hidden]=\\\"!email.errors?.pattern\\\">\\n                Invalid pattern\\n              </div> \\n            </div>\\n        </mat-form-field>\\n\\n        <br>\\n\\n        <mat-form-field class=\\\"field-full-width\\\">\\n          <mat-select formControlName=\\\"role_name\\\" placeholder=\\\"Roles\\\" [value]=\\\"role_name\\\" required #role_name>\\n            <mat-option *ngFor=\\\"let role of roles\\\" [value]=\\\"role._id\\\">{{role.name}}</mat-option>\\n          </mat-select>\\n          <!-- <mat-error *ngIf=\\\"isFieldInvalid('role_name')\\\">\\n            Your role please\\n          </mat-error> -->\\n        </mat-form-field>\\n\\n        <br>\\n        <button type=\\\"submit\\\" [disabled]=\\\"!createUser.valid\\\" mat-raised-button color=\\\"primary\\\">Register\\n        </button>\\n\\n      </form>\\n    </div>\\n    <div class=\\\"col-md-3\\\">\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\\n\\n<!-- <input id=\\\"name\\\" name=\\\"name\\\" class=\\\"form-control\\\"\\n      required minlength=\\\"4\\\" appForbiddenName=\\\"bob\\\"\\n      [(ngModel)]=\\\"hero.name\\\" #name=\\\"ngModel\\\" > -->\\n\\n<!-- <div *ngIf=\\\"name.invalid\\\">\\n    Name is required.\\n</div> -->\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Role } from '../../../models/role';\nimport { User } from '../../../models/user';\nimport { HttpService } from '../../../http.service';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-adduser',\n  templateUrl: './adduser.component.html',\n  styleUrls: ['./adduser.component.css']\n})\n\nexport class AdduserComponent implements OnInit {\n\n  roles: Role[];\n  createUser: FormGroup;\n  submitted = false;\n  private formSubmitAttempt: boolean;\n  mode: string = 'Add';\n  name;\n  email;\n  role_name;\n\n  constructor(private httpService: HttpService, private fb: FormBuilder, private router: Router, private route: ActivatedRoute, private snackBar: MatSnackBar) {\n    this.createUser = this.fb.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      role_name: ['', Validators.required]\n    });\n  }\n\n  ngOnInit() {\n    this.fetchRoles();\n    let id = this.route.snapshot.params[\"id\"];\n\n    if (id) {\n      this.usersList(id);\n      this.mode = \"Edit\";\n    }\n    else {\n      this.mode = \"Create\";\n      this.validator();\n    }\n  }\n\n  // convenience getter for easy access to form fields\n  get c() { return this.createUser.controls; }\n\n  // addUser(){\n  //   const user = {\n  //       name: this.name,\n  //       email: this.email,\n  //       role_name: this.role_name\n  //     };\n  //   this.httpService.doPost('user/add',user);\n  //   // .subscribe(() => {\n  //   //   this.router.navigate(['/dashboard']);\n  //   // });\n  // }\n\n  fetchRoles() {\n    this.httpService.doGet('roles')\n      .subscribe((data: Role[]) => {\n        this.roles = data;\n        console.log('Data requested ...');\n        console.log(this.roles);\n      });\n  }\n\n  //   for(var i = 0; i < this.roles.length; i++)\n  // {\n  //   var element = this.roles.role_name[i];\n  //   for (var j = 0; j < role_name.length; j++) {\n  //     var version = role_name[j];\n  //   }\n  // }\n\n  // isFieldInvalid(field: string) { // {6}\n  //   return (\n  //     (!this.createUser.get(field).valid && this.createUser.get(field).touched) ||\n  //     (this.createUser.get(field).untouched && this.formSubmitAttempt)\n  //   );\n  // }\n\n  usersList(id) {\n    this.httpService.doGet(\"users/\" + id).subscribe((res: any) => {\n\n      // this.issue = res;\n      // this.createUser.get('name').setValue(res.name);\n      // this.createUser.get('email').setValue(res.email);\n      // this.createUser.get('role_name').setValue(res.role_name);\n\n      this.name = res.name;\n      this.email = res.email;\n      this.role_name = res.role_name;\n      this.validator();\n    });\n  }\n\n  validator() {\n    this.createUser = this.fb.group({\n      name: [this.name],\n      email: [this.email],\n      role_name: [this.role_name]\n    });\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    let that = this;\n    let id = this.route.snapshot.params[\"id\"];\n    if (!id) {\n      // console.log(id);\n      console.log(this.createUser.value);\n      if (!this.createUser.invalid) {\n        this.httpService.doPost(\"user/add\", this.createUser.value)\n          .subscribe(\n            () => {\n              this.snackBar.open('User added successfully', 'OK', {\n                duration: 5000,\n                verticalPosition: 'top',\n                horizontalPosition: 'right'\n              });\n              that.router.navigate([\"user\"]);\n            });\n      }\n    }\n    else {\n      this.httpService.doPatch(\"users/\" + id, this.createUser.value)\n        .subscribe(\n          () => {\n            this.snackBar.open('User updated successfully', 'OK', {\n              duration: 5000,\n              verticalPosition: 'top',\n              horizontalPosition: 'right'\n            });\n            that.router.navigate([\"user\"]);\n          });\n    }\n    this.formSubmitAttempt = true;\n  }\n\n}\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci9ob21lL2hvbWUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  home works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../../../http.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  public role: any;\n  public id: any;\n  public permission: any;\n\n  constructor(private httpService: HttpService) { }\n\n  ngOnInit() {\n    var lsuser = JSON.parse(localStorage.getItem('user'));\n    console.log(lsuser);\n    for (var i = 0; i < lsuser.length; i++) {\n      var item = lsuser[i];\n    }\n    this.role = item.name;\n    this.id = item._id;\n    console.log(this.role);\n    \n    this.httpService.doGet(\"permissions/\" + this.id).subscribe(res=>{\n      this.permission = res;\n    });\n    console.log(this.permission);\n\n  }\n\n  \n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci9saXN0dXNlci9saXN0dXNlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<a routerLink=\\\"/user/adduser\\\">Add User</a>\\n<div>\\n    <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"addUser()\\\" style=\\\"float: right;\\\">New Project</button> -->\\n  <div class=\\\"card-body\\\">\\n    <table class=\\\"table table-bordered\\\">\\n      <tr>\\n        <!-- <th>#</th> -->\\n        <th>Name</th>\\n        <th>Email</th>\\n        <th>Role</th>\\n        <th>Actions</th>\\n      </tr>\\n      <tr *ngFor=\\\"let user of users\\\">\\n        <!-- <td>{{project._id}}</td> -->\\n        <td>{{user.name}}</td>\\n        <td>{{user.email}}</td>\\n        <td><div *ngFor=\\\"let role of user.role_name\\\">{{role.name}}</div></td>\\n        <td>\\n            <!-- /users/add/ -->\\n            <a routerLink=\\\"adduser/{{user._id}}\\\">Edit</a>&nbsp;\\n          <a href=\\\"javascript:;\\\" (click)=\\\"deleteUser($event)\\\" data-id=\\\"{{user._id}}\\\">Delete</a>\\n         </td>\\n      </tr>\\n    </table>\\n  </div>\\n\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpService } from '../../../http.service';\nimport { User } from '../../../models/user';\n\n@Component({\n  selector: 'app-listuser',\n  templateUrl: './listuser.component.html',\n  styleUrls: ['./listuser.component.css']\n})\nexport class ListuserComponent implements OnInit {\n\n  userList: User[];\n  public users: any;\n  constructor(private httpService: HttpService, private router: Router) { }\n\n  ngOnInit() {\n    this.getUsers();\n  }\n\n  getUsers() {\n    this.httpService.doGet(\"users\").subscribe(res => {\n      this.users = res;\n    });\n    console.log(this.users);\n  }\n\n  deleteUser($event) {\n    let id = $event.target.id;\n    let that = this;\n    this.httpService.doDel(\"users/\" + id).subscribe(res => {\n      that.getUsers();\n    });\n  }\n\n  addUser() {\n    this.router.navigate(['/adduser']);\n  }\n\n}\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci9sb2dpbnVzZXIvbG9naW51c2VyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-3\\\">3 grid</div>\\n    <div class=\\\"col-md-6\\\">\\n      <form [formGroup]=\\\"loginForm\\\" name=\\\"loginForm\\\" (ngSubmit)=\\\"login()\\\">\\n        <mat-form-field class=\\\"field-full-width\\\">\\n          <input matInput placeholder=\\\"email\\\" formControlName=\\\"email\\\" #email>\\n        </mat-form-field>\\n        <br>\\n        <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\">Login</button>\\n      </form>\\n    </div>\\n    <div class=\\\"col-md-3\\\">3 grid</div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule, FormArray } from '@angular/forms';\nimport { HttpService } from '../../../http.service';\n// import { Route } from \"@angular/compiler/src/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n// import { concatMap } from 'rxjs';\nimport { User } from '../../../models/user';\nimport { Permission } from 'src/app/models/permission';\n\n@Component({\n  selector: 'app-loginuser',\n  templateUrl: './loginuser.component.html',\n  styleUrls: ['./loginuser.component.css']\n})\nexport class LoginuserComponent implements OnInit {\n\n  public users;\n  public permissions: any;\n  public role: any;\n  public loginForm: FormGroup;\n  email;\n\n  constructor(public fb: FormBuilder, public httpService: HttpService, public route: ActivatedRoute, private router: Router) {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]]\n    });\n  }\n\n  ngOnInit() {\n    if (localStorage.getItem('isLoggedin') == 'true') {\n      this.router.navigate(['/user']);\n    }\n    this.validator();\n  }\n\n  // fetch the roles\n\n  // async fetchRole() {\n  //   await this.login();\n  //   this.httpService.doGet(\"users\").subscribe(res => {\n  //     this.users = res;\n  //   });\n  //   console.log(this.users.role_name);\n  // }\n\n  //1st function to call\n\n  login() {\n    let that = this;\n    this.httpService\n      .doLogin(\"login\", this.loginForm.value)\n      .subscribe(\n        (data: any) => {\n          console.log(data);\n          if (data.message == 'fail') {\n            alert('Failed');\n          }\n          else {\n            localStorage.setItem('user', JSON.stringify(data.role_name));\n            localStorage.setItem('isLoggedin', 'true');\n            that.router.navigate([\"/home\"]);\n          }\n        },\n        (err: any) => { }\n      );\n  }\n\n  //2nd function to call\n\n  getPermission() {\n    var lsuser = JSON.parse(localStorage.getItem('user'));\n    console.log(lsuser);\n\n    for (var i = 0; i < lsuser.length; i++) {\n      var item = lsuser[i];\n    }\n\n    this.role = item.name;\n    console.log(this.role);\n    this.httpService.doGet('permissions/' + this.role).subscribe((res: Permission[]) => {\n      this.permissions = res;\n    });\n    console.log(this.permissions)\n  }\n\n  //Last function to call\n\n  // getAlldata() {\n  //   this.login();\n  //   console.log()\n  //     .subscribe(\n  //       () => {\n  //         this.getPermission();\n  //       })\n  //     .subscribe(\n  //       () => { console.log(); });\n  // }\n\n  validator() {\n    this.loginForm = this.fb.group({\n      email: [this.email],\n    });\n  }\n\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdduserComponent } from './adduser/adduser.component';\nimport { ListuserComponent } from './listuser/listuser.component';\nimport { LoginuserComponent } from './loginuser/loginuser.component';\n\nimport { AuthGuardService } from '../../guards/auth-guard.service';\nimport { HomeComponent } from './home/home.component';\n\nconst roles = [\"admin\",\"developer\",\"Q.A.\"];\nconst routes: Routes = [\n  {\n    path: 'login',\n    component: LoginuserComponent\n  },\n  {\n    path: 'home',\n    component: HomeComponent\n  },\n  {\n    path: '',\n    component: ListuserComponent\n    // canActivate: [AuthGuardService]\n    // data: {\n    //   allowedRoles: ['admin','developer','Q.A.']\n    // }\n  },\n  {\n    path: 'adduser',\n    component: AdduserComponent\n    // canActivate: [AuthGuardService]\n    // data: {\n    //   allowedRoles: ['admin']\n    // }\n  },\n  {\n    path: 'adduser/:id',\n    component: AdduserComponent\n    // canActivate: [AuthGuardService]\n    // data: {\n    //   allowedRoles: ['admin']\n    // }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatSnackBar, MatToolbarModule, MatFormFieldModule, MatInputModule, MatDatepickerModule, MatOptionModule, MatSelectModule, MatIconModule, MatButtonModule, MatCardModule, MatTableModule, MatDividerModule, MatSnackBarModule, MatNativeDateModule, MatPaginator, MatPaginatorModule } from '@angular/material';\nimport { UserRoutingModule } from './user-routing.module';\nimport { FormsModule, ReactiveFormsModule }   from '@angular/forms';\nimport { AdduserComponent } from './adduser/adduser.component';\nimport { ListuserComponent } from './listuser/listuser.component';\nimport { LoginuserComponent } from './loginuser/loginuser.component';\nimport { HomeComponent } from './home/home.component';\n\n@NgModule({\n  declarations: [AdduserComponent, ListuserComponent, LoginuserComponent, HomeComponent],\n  imports: [\n    CommonModule,\n    UserRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatSnackBar,\n    MatToolbarModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatOptionModule,\n    MatSelectModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCardModule,\n    MatTableModule,\n    MatDividerModule\n  ]\n})\nexport class UserModule { }\n"],"sourceRoot":""}