{"version":3,"sources":["webpack:///./src/app/components/task/addtask/addtask.component.css","webpack:///./src/app/components/task/addtask/addtask.component.html","webpack:///./src/app/components/task/addtask/addtask.component.ts","webpack:///./src/app/components/task/listtask/listtask.component.css","webpack:///./src/app/components/task/listtask/listtask.component.html","webpack:///./src/app/components/task/listtask/listtask.component.ts","webpack:///./src/app/components/task/task-routing.module.ts","webpack:///./src/app/components/task/task.module.ts"],"names":[],"mappings":"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","file":"components-task-task-module.js","sourcesContent":["module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdGFzay9hZGR0YXNrL2FkZHRhc2suY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-3\\\">\\n      {{mode}} task<br>\\n      <a routerLink=\\\"/task\\\">List Tasks</a>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      \\n      <form [formGroup]=\\\"createTask\\\" name=\\\"createTask\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n        <mat-form-field class=\\\"field-full-width\\\">\\n          <input matInput placeholder=\\\"task_name\\\" formControlName=\\\"task_name\\\" required #task_name>\\n        </mat-form-field>\\n        <br>\\n        <mat-form-field class=\\\"field-full-width\\\">\\n          <mat-select formControlName=\\\"of_project\\\" #of_project required placeholder=\\\"of_project\\\">\\n            <mat-option *ngFor=\\\"let project of projects\\\" [value]=\\\"project._id\\\">{{project.title}}</mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n        <br>\\n        <mat-form-field class=\\\"field-full-width\\\">\\n          <mat-select formControlName=\\\"users_assigned\\\" #users_assigned\\n            placeholder=\\\"users_assigned\\\" required multiple>\\n            <mat-option *ngFor=\\\"let user of users\\\" [value]=\\\"user._id\\\">{{user.name}}</mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n        <br>\\n        <button type=\\\"submit\\\" [disabled]=\\\"!createTask.valid\\\" mat-raised-button color=\\\"primary\\\">Add Task\\n        </button>\\n      </form>\\n      \\n    </div>\\n    <div class=\\\"col-md-3\\\">\\n      \\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { User } from '../../../models/user';\nimport { Project } from '../../../models/project';\nimport { Task } from '../../../models/task';\nimport { HttpService } from '../../../http.service';\n\n@Component({\n  selector: 'app-addtask',\n  templateUrl: './addtask.component.html',\n  styleUrls: ['./addtask.component.css']\n})\nexport class AddtaskComponent implements OnInit {\n\n  users: User[];\n  projects: Project[];\n  tasks: Task[];\n  createTask: FormGroup;\n  mode: string = 'Add';\n  task_name;\n  of_project;\n  users_assigned;\n  constructor(private httpService: HttpService, private fb: FormBuilder, private router: Router, public route: ActivatedRoute) {\n    this.createTask = this.fb.group({\n      task_name: ['',Validators.required],\n      of_project: ['',Validators.required],\n      users_assigned: ['',Validators.required]\n    });\n  }\n\n  fetchUsers() {\n    this.httpService.doGet('users')\n      .subscribe((data: User[]) => {\n        this.users = data;\n        console.log('Data requested ...');\n        console.log(this.users);\n      });\n  }\n\n  fetchProjects() {\n    this.httpService.doGet('projects')\n      .subscribe((data: Project[]) => {\n        this.projects = data;\n        console.log('Data requested ...');\n        console.log(this.projects);\n      });\n  }\n\n  ngOnInit() {\n    this.fetchProjects();\n    this.fetchUsers();\n    let id = this.route.snapshot.params[\"id\"];\n    \n    if (id) {\n      this.tasksList(id);\n      this.mode = \"Edit\";\n    } else {\n      this.mode = \"Create\";\n      this.validator();\n    }\n  }\n\n  tasksList(id) {\n    this.httpService.doGet(\"tasks/\" + id).subscribe((res: any) => {\n      this.task_name = res.task_name;\n      this.of_project = res.of_project;\n      this.users_assigned = res.users_assigned;\n      this.validator();\n    });\n  }\n\n  validator() {\n    this.createTask = this.fb.group({\n      task_name: [this.task_name],\n      of_project: [this.of_project],\n      users_assigned: [this.users_assigned]\n    });\n  }\n\n  onSubmit() {\n    let that = this;\n    let id = this.route.snapshot.params[\"id\"];\n    if (!id) {\n      console.log(id);\n      this.httpService.doPost(\"task/add\", this.createTask.value)\n        .subscribe(\n          (data: any) => {\n            that.router.navigate([\"task\"]);\n          },\n          (err: any) => { }\n        );\n    }\n    else {\n      this.httpService.doPatch(\"tasks/\" + id, this.createTask.value)\n        .subscribe(\n          (data: any) => {\n            that.router.navigate([\"task\"]);\n          },\n          (err: any) => { }\n        )\n    }\n  }\n\n}\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdGFzay9saXN0dGFzay9saXN0dGFzay5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<a routerLink=\\\"/task/addtask\\\">Add Task</a>\\n<div>\\n  <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"addTask()\\\" style=\\\"float: right;\\\">New Project</button> -->\\n<div class=\\\"card-body\\\">\\n  <table class=\\\"table table-bordered\\\">\\n    <tr>\\n      <!-- <th>#</th> -->\\n      <th>Task</th>\\n      <th>Project</th>\\n      <th>Users</th>\\n      <th>Actions</th>\\n    </tr>\\n    <tr *ngFor=\\\"let task of tasks; let ind = index\\\">\\n      <!-- <td>{{project._id}}</td> -->\\n      <!-- task.of_project[0]?.title -->\\n      <td>{{task.task_name}}</td>\\n      <td>{{task.of_project[0]?.title}}</td>\\n      <!-- <td>{{task.users_assigned[0]?.name}}</td> -->\\n      <td><div *ngFor=\\\"let user of task.users_assigned\\\">{{user.name}}</div></td>\\n      <td>\\n          <a routerLink=\\\"addtask/{{task._id}}\\\">Edit</a>&nbsp;\\n          <a href=\\\"javascript:;\\\" (click)=\\\"deleteTask($event)\\\" data-id=\\\"{{task._id}}\\\">Delete</a>\\n        <!-- <a routerLink=\\\"/{{commonFunctions.getAccessCodePrefix()}}/projects/edit/{{project._id}}\\\">Edit</a>&nbsp;\\n            <a href=\\\"javascript:;\\\" (click)=\\\"deleteProject($event)\\\" data-id=\\\"{{project._id}}\\\">Delete</a> -->\\n      </td>\\n    </tr>\\n  </table>\\n</div>\\n\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpService } from '../../../http.service';\n// import { Project } from '../../../models/project';\n// import { User } from '../../../models/user';\nimport { Task } from '../../../models/task';\n\n@Component({\n  selector: 'app-listtask',\n  templateUrl: './listtask.component.html',\n  styleUrls: ['./listtask.component.css']\n})\nexport class ListtaskComponent implements OnInit {\n\n  tasks: Task[];\n  constructor(private httpService: HttpService, private router:Router) { }\n\n  ngOnInit() {\n    this.getTasks();\n  }\n\n  getTasks(){\n    this.httpService.doGet(\"tasks\").subscribe((res: Task[]) => {\n      this.tasks = res;\n    });\n    console.log(this.tasks);\n  }\n\n  deleteTask($event) \n   {\n    let id = $event.target.id;\n    let that = this;\n    this.httpService.doDel(\"tasks/\" + id).subscribe(res => {\n      that.getTasks();\n    });\n  }\n\n  addTask()\n  {\n  \tthis.router.navigate(['/addtask']);\n  }\n\n}\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ListtaskComponent } from \"./listtask/listtask.component\";\nimport { AddtaskComponent } from \"./addtask/addtask.component\";\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ListtaskComponent\n  },\n  {\n    path: 'addtask',\n    component: AddtaskComponent\n  },\n  {\n    path: 'addtask/:id',\n    component: AddtaskComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TaskRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatToolbarModule, MatFormFieldModule, MatInputModule, MatDatepickerModule, MatOptionModule, MatSelectModule, MatIconModule, MatButtonModule, MatCardModule, MatTableModule, MatDividerModule, MatSnackBarModule, MatNativeDateModule, MatPaginator, MatPaginatorModule } from '@angular/material';\nimport { FormsModule, ReactiveFormsModule }   from '@angular/forms';\nimport { TaskRoutingModule } from './task-routing.module';\nimport { AddtaskComponent } from './addtask/addtask.component';\nimport { ListtaskComponent } from './listtask/listtask.component';\n\n@NgModule({\n  declarations: [AddtaskComponent, ListtaskComponent],\n  imports: [\n    CommonModule,\n    TaskRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatToolbarModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatOptionModule,\n    MatSelectModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCardModule,\n    MatTableModule,\n    MatDividerModule\n  ]\n})\nexport class TaskModule { }\n"],"sourceRoot":""}