{"version":3,"sources":["webpack:///./src/app/http.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAA2C;AACO;AACX;AACE;AAKzC;IAWE,qBAAoB,MAAc,EAAU,IAAgB;QAAxC,WAAM,GAAN,MAAM,CAAQ;QAAU,SAAI,GAAJ,IAAI,CAAY;QAT5D,sCAAsC;QACtC,QAAG,GAAG,wBAAwB,CAAC;QAExB,aAAQ,GAAG,IAAI,oDAAe,CAAU,KAAK,CAAC,CAAC;IAMU,CAAC;IAJjE,sBAAI,mCAAU;aAAd;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,CAAC,MAAM;QAC7C,CAAC;;;OAAA;IAID,4BAAM,GAAN,UAAO,IAAI,EAAC,IAAI;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAG,IAAI,CAAC,GAAK,GAAG,IAAI,EAAE,IAAI,CAAC,CAAC;IACpD,CAAC;IAED,2BAAK,GAAL,UAAM,IAAI;QACR,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAG,IAAI,CAAC,GAAK,GAAG,IAAI,CAAC,CAAC;IAC7C,CAAC;IAED,2BAAK,GAAL,UAAM,IAAI;QACR,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAG,IAAI,CAAC,GAAK,GAAG,IAAI,CAAC;IAC/C,CAAC;IAED,6BAAO,GAAP,UAAQ,IAAI,EAAC,IAAI;QAEf,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAG,IAAI,CAAC,GAAK,GAAG,IAAI,EAAC,IAAI,CAAC,CAAC;IAClD,CAAC;IAED,6BAAO,GAAP,UAAQ,IAAI,EAAC,IAAI;QAEf,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QAChC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAG,IAAI,CAAC,GAAK,GAAG,IAAI,EAAE,IAAI,CAAC,CAAC;IACpD,CAAC;IAnCU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAY4B,sDAAM,EAAgB,+DAAU;OAXjD,WAAW,CAoCvB;IAAD,kBAAC;CAAA;AApCuB","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  // uri = 'http://139.59.25.162:3000/';\n  uri = 'http://localhost:3000/';\n\n  public loggedIn = new BehaviorSubject<boolean>(false);\n\n  get isLoggedIn() {\n    return this.loggedIn.asObservable(); // {2}\n  }\n\n  constructor(private router: Router, private http: HttpClient) { }\n\n  doPost(path,data){\n    return this.http.post(`${this.uri}` + path, data);    \n  }\n\n  doGet(path){\n    return this.http.get(`${this.uri}` + path);\n  }\n\n  doDel(path){\n    return this.http.delete(`${this.uri}` + path)\n  }\n\n  doPatch(path,data)\n  {\n    return this.http.put(`${this.uri}` + path,data);\n  }\n\n  doLogin(path,data)\n  {\n    this.loggedIn.next(true);\n    this.router.navigate(['/user']);\n    return this.http.post(`${this.uri}` + path, data);\n  }\n}\n"],"sourceRoot":""}